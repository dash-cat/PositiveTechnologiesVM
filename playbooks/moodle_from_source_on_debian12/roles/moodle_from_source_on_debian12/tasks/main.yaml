---
- name: Ensure required packages are installed
  ansible.builtin.apt:
    name: 
      - lsb-release
      - ca-certificates
      - curl
      - wget
      - apache2
      - php8.2
      - php8.2-mysql
      - libapache2-mod-php8.2
      - php8.2-gd
      - php8.2-curl
      - php8.2-xmlrpc
      - php8.2-xml
      - php8.2-soap
      - php8.2-intl
      - php8.2-zip
      - php8.2-mbstring
      - php-mysql
      - mariadb-server
    state: present
    update_cache: yes
  become: true

- name: Start and enable Apache
  service:
    name: apache2
    state: started
    enabled: true

- name: Ensure MariaDB server is installed
  ansible.builtin.apt:
    name: mariadb-server
    state: present
    update_cache: yes
  become: true

- name: Ensure MySQL Python package is installed
  ansible.builtin.apt:
    name: python3-pymysql
    state: present
  become: true

- name: Ensure MySQL root password is set
  ansible.builtin.mysql_user:
    name: root
    host: localhost
    password: root_password
    state: present
    check_implicit_admin: yes
  register: root_password_result
  become: true
  ignore_errors: true

- name: Debug root password result
  debug:
    var: root_password_result

- name: Create Moodle database
  community.mysql.mysql_db:
    name: moodle
    state: present
    login_user: root
    login_password: root_password
  become: true

- name: Create MySQL user for Moodle
  community.mysql.mysql_user:
    name: moodleuser
    password: moodlepassword
    priv: "moodle.*:ALL"
    state: present
    login_user: root
    login_password: root_password
  become: true

- name: Create Moodle data directory
  file:
    path: "{{ moodle_data }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0777'

- name: Download Moodle
  ansible.builtin.get_url:
    url: https://download.moodle.org/download.php/direct/stable404/moodle-latest-404.tgz
    dest: /tmp/moodle-latest-404.tgz
    mode: '0644'

- name: Extract Moodle
  ansible.builtin.unarchive:
    src: /tmp/moodle-latest-404.tgz
    dest: /var/www/html/
    remote_src: yes
    owner: www-data
    group: www-data

- name: Set permissions for Moodle directory
  file:
    path: "{{ moodle_dir }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: yes

- name: Configure Apache for Moodle
  copy:
    dest: /etc/apache2/sites-available/moodle.conf
    content: |
      <VirtualHost *:80>
          DocumentRoot {{ moodle_dir }}
          <Directory {{ moodle_dir }}>
              Options Indexes FollowSymLinks MultiViews
              AllowOverride All
              Require all granted
          </Directory>
      </VirtualHost>
  notify:
    - Restart Apache

- name: Enable Moodle site and modules
  command: "{{ item }}"
  loop:
    - a2ensite moodle.conf
    - a2enmod rewrite
  changed_when: false

- name: Restart Apache
  service:
    name: apache2
    state: restarted

- name: Check if config.php exists
  stat:
    path: "{{ moodle_dir }}/config.php"
  register: moodle_config

- name: Generate Moodle config.php
  command: >
    php {{ moodle_dir }}/admin/cli/install.php
    --chmod=2777
    --lang=en
    --wwwroot={{ moodle_url }}
    --dataroot={{ moodle_data }}
    --dbtype=mariadb
    --dbname={{ db_name }}
    --dbuser={{ db_user }}
    --dbpass={{ db_pass }}
    --fullname="MoodleSite"
    --shortname=moodle
    --adminuser={{ admin_user }}
    --adminpass={{ admin_pass }}
    --adminemail={{ admin_email }}
    --agree-license
    --non-interactive
  args:
    executable: /bin/bash
  become: true
  become_user: www-data
  when: not moodle_config.stat.exists

- name: Set up cron job for Moodle
  cron:
    name: "Moodle cron"
    user: www-data
    minute: "*"
    job: "/usr/bin/php {{ moodle_dir }}/admin/cli/cron.php >/dev/null"
