{%- macro left_version(cond) -%}
{% if cond['left_ver'] %}greater than {% if cond['left_incl'] %}or equal {% endif %}{{ cond['left_ver'] }}{% endif %}
{%- endmacro -%}
{%- macro right_version(cond) -%}
{% if cond['right_ver'] %}less than {% if cond['right_incl'] %}or equal {% endif %}{{ cond['right_ver'] }}{% endif %}
{%- endmacro -%}
{%- macro equal_version(cond) -%}
equal to {{ cond['left_ver'] }}
{%- endmacro -%}
{%- macro test_comment(soft_name, cond) -%}
Check {{ soft_name }} version is {% if cond['left_ver'] == cond['right_ver'] %}{{ equal_version(cond) }}{% else %}{{ left_version(cond) }}{% if cond['left_ver']%} and {% endif %}{{ right_version(cond) }}{% endif %}
{%- endmacro -%}
<?xml version="1.0" encoding="utf-8"?>
<oval_definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5">
  <generator>
    <oval:product_name>PT OVAL generator</oval:product_name>
    <oval:schema_version>5.11</oval:schema_version>
    <oval:timestamp>2024-05-07T12:25:10</oval:timestamp>
  </generator>
  <definitions>
    <definition class="inventory" id="oval:test:def:1" version="1">
      <metadata>
        <title>{{ soft_name }} is installed</title>
        <affected family="{{ affected_family }}">
          <product>{{ soft_name }}</product>
        </affected>
        <description>{{ soft_name }} is installed</description>
      </metadata>
      <criteria>
        <criterion comment="{{ soft_name }} is installed" test_ref="oval:test:tst:1" />
      </criteria>
    </definition>
{% set def = namespace(counter = 2) -%}
{% set test = namespace(counter = 2) -%}
{%- for cve in cves %}
    <definition class="vulnerability" id="oval:test:def:{{ def.counter }}" version="1">
      <metadata>
        <title>{{ cve['id'] }}: Vulnerability in {{ soft_name }}</title>
        <affected family="{{ affected_family }}">
          <product>{{ soft_name }}</product>
        </affected>
        <reference source="CVE" ref_id="{{ cve['id'] }}" ref_url="https://nvd.nist.gov/vuln/detail/{{ cve['id'] }}" />
        <description>check {{ cve['description'] }}</description>
      </metadata>
      <criteria>
        <extend_definition comment="{{ soft_name }} is installed" definition_ref="oval:test:def:1" />
        <criteria operator="OR">
{%- for cond in cve['conditions'] %}
          <criterion comment="{{ test_comment(soft_name, cond) }}" test_ref="oval:test:tst:{{ test.counter }}" />
{%- set test.counter = test.counter + 1 -%}
{% endfor %}
        </criteria>
      </criteria>
    </definition>
{% set def.counter = def.counter + 1 -%}
{%- endfor %}
  </definitions>
  <tests>
    <variable_test id="oval:test:tst:1" version="1" comment="{{ soft_name }} is installed" check_existence="at_least_one_exists" check="all" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:test:obj:1"/>
      <state state_ref="oval:test:ste:1"/>
    </variable_test>
{%- set test = namespace(counter = 2) -%}
{%- set state = namespace(counter = 2) -%}
{% for cve in cves %}
{%- for cond in cve['conditions'] %}
    <variable_test id="oval:test:tst:{{ test.counter }}" version="1" comment="test" check_existence="at_least_one_exists" check="all" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:test:obj:{{ version_var_id }}"/>
{%- set test.counter = test.counter + 1 %}
{%- if cond['left_ver'] == cond['right_ver'] %}
      <state state_ref="oval:test:ste:{{ state.counter }}"/>
{%- set state.counter = state.counter + 1 -%}
{%- else %}
{% if cond['left_ver'] %}
      <state state_ref="oval:test:ste:{{ state.counter }}"/>
{%- set state.counter = state.counter + 1 -%}
{%- endif %}
      <state state_ref="oval:test:ste:{{ state.counter }}"/>
{%- set state.counter = state.counter + 1 -%}
{%- endif %}
    </variable_test>
{% endfor %}
{%- endfor %}
  </tests>
  <objects>
    <variable_object id="oval:test:obj:1" version="1" comment="product name" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:test:var:{{ product_var_id }}</var_ref>
    </variable_object>
    <variable_object id="oval:test:obj:2" version="1" comment="{{ soft_name }} version" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:test:var:{{ version_var_id }}</var_ref>
    </variable_object>
  </objects>
  <states>
    <variable_state id="oval:test:ste:1" version="1" comment="Check {{ soft_name }} installed" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="string">{{ soft_name }}</value>
    </variable_state>
{% set test = namespace(counter = 2) -%}
{% set state = namespace(counter = 2) -%}
{%- for cve in cves %}
{%- for cond in cve['conditions'] %}
{%- if cond['left_ver'] == cond['right_ver'] %}
    <variable_state id="oval:test:ste:{{ state.counter }}" version="1" comment="Version is {{ equal_version(cond) }}" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="version" operation="equals">{{ cond['left_ver'] }}</value>
    </variable_state>
{%- set state.counter = state.counter + 1 -%}
{%- else %}
{%- if cond['left_ver'] %}
    <variable_state id="oval:test:ste:{{ state.counter }}" version="1" comment="Version is {{ left_version(cond) }}" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="version" operation="greater than{% if cond['left_incl']  %} or equal{% endif %}">{{ cond['left_ver'] }}</value>
    </variable_state>
{%- set state.counter = state.counter + 1 -%}
{%- endif %}
    <variable_state id="oval:test:ste:{{ state.counter }}" version="1" comment="Version is {{ right_version(cond) }}" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="version" operation="less than{% if cond['right_incl']  %} or equal{% endif %}">{{ cond['right_ver'] }}</value>
    </variable_state>
{%- set state.counter = state.counter + 1 -%}
{%- endif %}
{%- endfor %}
{%- endfor %}
  </states>
  <variables>
    <external_variable id="oval:test:var:{{ product_var_id }}" version="1" comment="product name" datatype="string">
    </external_variable>
    <external_variable id="oval:test:var:{{ version_var_id }}" version="1" comment="product version" datatype="version">
    </external_variable>
  </variables>
</oval_definitions>
