---
- name: Ensure the system is updated
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install WireGuard
  ansible.builtin.apt:
    name: wireguard
    state: present

- name: Install WireGuard tools
  ansible.builtin.apt:
    name: wireguard-tools
    state: present

- name: Ensure WireGuard configuration directory exists
  ansible.builtin.file:
    path: /etc/wireguard
    state: directory
    mode: '0700'

- name: Generate WireGuard private key
  ansible.builtin.command: "wg genkey"
  register: wg_private_key_output
  changed_when: "'privatekey' not in wg_private_key_output.stdout"

- name: Save WireGuard private key to file
  ansible.builtin.copy:
    content: "{{ wg_private_key_output.stdout }}"
    dest: /etc/wireguard/privatekey
    mode: '0600'
  changed_when: "'privatekey' not in wg_private_key_output.stdout"

- name: Set WireGuard private key
  ansible.builtin.set_fact:
    wg_private_key: "{{ wg_private_key_output.stdout }}"

- name: Generate WireGuard public key
  ansible.builtin.command: "echo {{ wg_private_key }} | wg pubkey"
  register: wg_public_key_output
  changed_when: "'publickey' not in wg_public_key_output.stdout"

- name: Save WireGuard public key to file
  ansible.builtin.copy:
    content: "{{ wg_public_key_output.stdout }}"
    dest: /etc/wireguard/publickey
    mode: '0600'
  changed_when: "'publickey' not in wg_public_key_output.stdout"

- name: Set WireGuard public key
  ansible.builtin.set_fact:
    wg_public_key: "{{ wg_public_key_output.stdout }}"

- name: Save WireGuard keys to file
  ansible.builtin.copy:
    content: "PrivateKey: {{ wg_private_key }}\nPublicKey: {{ wg_public_key }}"
    dest: /etc/wireguard/keys
    mode: '0600'
  notify: Restart WireGuard

- name: Ensure WireGuard is enabled and started
  ansible.builtin.service:
    name: wg-quick@wg0
    state: started
    enabled: true
